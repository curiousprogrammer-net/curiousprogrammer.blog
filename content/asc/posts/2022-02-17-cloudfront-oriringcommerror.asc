{
:date "2022-02-23"
:title "CloudFront and mysterious OriginCommError"
:layout :post
:tags  ["aws" "performance"]
}

:toc:

If you are running production workloads on AWS there's a good chance you're using
https://aws.amazon.com/cloudfront/[Amazon CloudFront]
- Content Delivery Network (CDN) that helps you improve performance, security, and reliability of your website:

1. _performance_ - caching assets at edge locations near to your users
2. _security_ - DDoS mitigation and numerous other safety checks, especially when combined with https://aws.amazon.com/waf/[AWS WAF^]
3. _reliability_ - relates to (1) and (2): putting less load on your servers and preventing common attacks


## The typical deployment

You have a CloudFront distribution with perhaps Beanstalk or Application Load Balancer (ALB) as your origin server.

To reap the benefits mentioned above, you need to
https://www.arhs-group.com/protecting-aws-alb-behind-aws-cloudfront-distribution#restricting-access-to-our-alb[restrict access to your load balancers^] -
otherwise, an attacker can bypass all the CloudFront/WAF protections you have in place
and perform a DDoS (or another) attack.

There are multiple options to do this, but a common and effective one
is to *allow access only from CloudFront IPs*.<1>

And here comes the problem: how do you know which IPs should you whitelist?

## Restricting Access

Let's say you are an administrator of cool-website.com.
You heard about this technique (described above) to improving the security of your website.

You attach a security group to your ALB which restricts access only from
https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/LocationsOfEdgeServers.html[CloudFront IPs^].

It appears to work - nice and safe, right?

## The mystery

The original administrator left the company a few years ago
and you are now responsible for keeping the website up and running.

You suddenly get a report about intermittent timeouts affecting some of your visitors.
They all look pretty random and there's nothing in your Beanstalk app logs.
Moreover, the requests don't seem to be reaching your proxy running on the web nodes.

What the hell is going on?

## Logs, logs, and logs

You keep searching through the Cloudwatch logs but cannot find anything.
It's a mystery...

Then you finally bite the bullet and start downloading CloudFront logs.
It's a real pain to work with them because they are stored in a S3 bucket.
When you look up some of the failing requests in the logs,
you notice an interesting pattern: *all of them are failing with this mysterious `OriginCommError`*:

image::/img/2022-02-cloudfront-timeouts/cloudfront-OriginCommError.png[CloudFront logs open in VisiData - requests timing out with OriginCommError,1200]

(Tip: open the picture in a new browser tab)


## OriginCommError - who are you?

https://www.google.com/search?q=cloudfront+logs+%22OriginCommError%22[Google search reveals surprisingly little about this stuff^]:

___
image::/img/2022-02-cloudfront-timeouts/cloudfront-OriginCommError-google-search.png[Google search results for 'cloudfront logs OriginCommError']
___


But the first two links,
https://serverfault.com/questions/1091902/why-is-a-post-upload-of-a-100k-json-file-to-an-aws-cloudfront-endpoint-resulting[serverfault^]
and
https://www.reddit.com/r/aws/comments/rcicwk/cloudfront_alb_occasional_504_errors/[reddit^],
are actually useful.
They don't give you a clear answer but hint at something:
that is, the requests are probably not reaching your load Beanstalk load balancers at all!

### Ok, but why?

If something cannot connect to your network,
it likely means there's a firewall blocking access.
On AWS, we have *security groups*.

You vaguelly remember, there was a Lambda function that the original administrator set up.
It was supposed to update load balancer's security groups to make sure
the CloudFront IPs are whitelisted and the list of the IPs stay up to date.
You check it and, of course, the lambda has been failing for a long time.

Now you are onto something: the CloudFront IPs must have changed!


## Resolution

*https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/LocationsOfEdgeServers.html[Use the CloudFront managed prefix list]*.

With the CloudFront managed prefix list, you donâ€™t need to read or maintain a list of IP address ranges yourself.
If you remove all other inbound rules from the security group, you prevent any non-CloudFront traffic from reaching the instance.
Check https://eu-west-1.console.aws.amazon.com/vpc/home?region=eu-west-1#ManagedPrefixLists:[_Managed prefix lists_ in AWS VPC console^],
https://docs.aws.amazon.com/vpc/latest/userguide/working-with-aws-managed-prefix-lists.html#use-aws-managed-prefix-list[Use an AWS-managed prefix list]
and https://docs.aws.amazon.com/vpc/latest/userguide/working-with-managed-prefix-lists.html#managed-prefix-lists-referencing[Reference prefix lists in your AWS resources].

image::/img/2022-02-cloudfront-timeouts/load-balancer-security-group-using-managed-prefix-list.png[Using CloudFront managed prefix list as a source in a security group, 900]

The problem is solved, the users are happy again and you can go home.


## Resources

* https://serverfault.com/questions/1091902/why-is-a-post-upload-of-a-100k-json-file-to-an-aws-cloudfront-endpoint-resulting[serverfault question^]
* **https://www.arhs-group.com/protecting-aws-alb-behind-aws-cloudfront-distribution/[PROTECTING AN AWS ALB BEHIND AN AWS CLOUDFRONT DISTRIBUTION^]**
* https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/restrict-access-to-load-balancer.html[Restricting access to Application Load Balancers^]
* https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/LocationsOfEdgeServers.html[Locations and IP address ranges of CloudFront edge servers^]
* [old blog post] https://aws.amazon.com/blogs/security/how-to-automatically-update-your-security-groups-for-amazon-cloudfront-and-aws-waf-by-using-aws-lambda/[How to Automatically Update Your Security Groups for Amazon CloudFront and AWS WAF by Using AWS Lambda^]
* https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html#vpc-limits-security-groups[Security groups limits - max 60 inbound rules by default^]


*Footnotes*:

* <1>: Additionally, you can make CloudFront attach a secret value in an HTTP header and configure ALB to only forward requests containing this header