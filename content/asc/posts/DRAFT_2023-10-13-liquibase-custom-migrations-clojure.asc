{
:date "2099-10-13"
:title "Liquibase: custom database migrations with Clojure (without AOT)"
:layout :post
:tags  ["databases" "migrations" "clojure"]
}

:toc:

## Liquibase Intro

https://github.com/liquibase/liquibase[Liquibase^] is a well-know tool for tracking, versioning, and eploying database schema changes.

It uses https://docs.liquibase.com/concepts/introduction-to-liquibase.html[changelog files^]
to list database changes  in the form of https://docs.liquibase.com/concepts/changelogs/changeset.html[changesets^] (SQL, XML, YAML, JSON),
which consists of https://docs.liquibase.com/change-types/home.html[Change Types^]

Standard changsets use SQL or its DB-independent equivalent written in XML, YAML, or JSON.

## Custom migrations

Sometimes, there's a more complicated migration that's very difficult or impossible to define with SQL.
That is, you need to write actual _code_ to perform the migration.

In that case, Liquibase offers https://docs.liquibase.com/change-types/custom-change.html[customChange] Change Type.

To implement a custom migration you need to:

1. Create a Java class that implements the `liquibase.change.custom.CustomSqlChange` or `liquibase.change.custom.CustomTaskChange` interface
+
[source,Java]
----
public class ExampleCustomTaskChange implements CustomTaskChange, CustomTaskRollback {
    private String helloTo;
    @SuppressWarnings({"UnusedDeclaration", "FieldCanBeLocal"})
    private ResourceAccessor resourceAccessor;

    @Override
    public void execute(Database database) throws CustomChangeException {
        Scope.getCurrentScope().getLog(getClass()).info("Hello "+getHelloTo());
    } 
    @Override
    public void rollback(Database database) throws CustomChangeException, RollbackImpossibleException {
        Scope.getCurrentScope().getLog(getClass()).info("Goodbye "+getHelloTo());
    }
    ...
}
----
2. `Compile the created class`, package it into a JAR file, and then add it to a Liquibase classpath.
3. Reference the class in your changelog.
+
[source,bash]
----
...
<changeSet id="21" author="nvoxland">
    <customChange class="liquibase.change.custom.ExampleCustomTaskChange">
        <param name="helloTo" value="world"/>
    </customChange>
</changeSet>
...
----




## The problem (custom migrations in Clojure)

Custom 


## Getting rid of AOT

### deftype


## Resources

* https://github.com/liquibase/liquibase[Liquibase^]
** https://docs.liquibase.com/concepts/introduction-to-liquibase.html[Introduction to Liquibase^]
** https://docs.liquibase.com/concepts/changelogs/changeset.html[changesets^] (SQL, XML, YAML, JSON)
** https://docs.liquibase.com/change-types/home.html[Change Types^]
** https://docs.liquibase.com/change-types/custom-change.html[customChange] Change Type

* 